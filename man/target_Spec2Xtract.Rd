% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/target_Spec2Xtract.R
\name{target_Spec2Xtract}
\alias{target_Spec2Xtract}
\title{targets factory to extract MS2 spectra}
\usage{
target_Spec2Xtract(
  files,
  cpd,
  save_dir = NULL,
  firstevent = TRUE,
  prec_ppm = 10,
  minscan = 3,
  rt_limit = 1,
  filter_irel = 0,
  filter_isopurity = 0,
  ppm = 3,
  search_adduct = FALSE,
  search_losses = FALSE,
  search_multimers = FALSE,
  search_isotopes = FALSE,
  resources = targets::tar_option_get("resources")
)
}
\arguments{
\item{files}{Vector containing the paths to the .raw or .mzML files}

\item{cpd}{A table containing compound information, must have the following
columns: compound, rtsec, elemcomposition and optionally inchikey}

\item{save_dir}{Directory to save tables}

\item{firstevent}{Should all MSn events be checked individually
(\code{FALSE}) or only the first one (\code{TRUE}).}

\item{prec_ppm}{Mass tolerance to find the precursor (in ppm)}

\item{minscan}{numeric value for the minimum number of scan
inside a peak to keep it}

\item{rt_limit}{limit rt deviation from reference when searching peaks}

\item{filter_irel}{Filter ions based on relative intensity}

\item{filter_isopurity}{Filter ions based on the isolation purity (from 0 to 100)}

\item{ppm}{mass deviation for elemental composition
search in ppm}

\item{search_adduct}{Boolean to search for adducts}

\item{search_losses}{Boolean to search for losses}

\item{search_multimers}{Boolean to search for multimers}

\item{search_isotopes}{Boolean to search for isotopes}

\item{resources}{Object returned by \code{tar_resources()}
with optional settings for high-performance computing
functionality, alternative data storage formats,
and other optional capabilities of \code{targets}.
See \code{tar_resources()} for details.}
}
\value{
A list of targets objects.
}
\description{
targets factory to extract MS2 spectra
}
\examples{
\dontrun{
  targets::tar_dir({
    targets::tar_script(
      {
        library(Spec2Xtract)
        library(targets)
        list(
          target_Spec2Xtract(
            files = get_sample_rawfile(),
            cpd = Spec2Xtract:::example_cpdlist_realdt,
            firstevent = TRUE,
            prec_ppm = 10,
            minscan = 3,
            rt_limit = 2,
            ppm = 10,
            save_dir = "./report"
          )
        )
      },
      ask = FALSE
    )
    ## Run pipeline
    targets::tar_make()
  })
}
}
